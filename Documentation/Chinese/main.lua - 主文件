main.lua

main.lua中的绝大部分库（Libraries）都是没有带local的，这意味着它们可以被全局使用。
例如：global = require("Scripts.Libraries.Tools.GlobalVariables")
由于在main.lua中我们已经require过了该库
所以可以在之后的所有库中都可以使用global相关的函数
例如您可以在其它代码的任何部分使用global:SetVar()函数与global:GetVar()函数



与main.lua中所拥有的所有库的用法均位于此：

    global:SetVar(string "name", any value)
    第一个参数：变量的名字
    第二个参数：赋予该变量的值（可以是任何类型）
    返回：nil

    global:GetVar(string "name")
    第一个参数：变量的名字
    返回：该变量的值

    这两个函数可以结合起来，多用于多个文件之间互相传递变量的值或者共用一个值，如下：
    示例：
    -- main.lua --
    global:SetVar("name", "player")

    -- scene.lua --
    print(global:GetVar("name")) -- 该代码会返回player

    

    keyboard:GetState(string "key")
    第一个参数：key的检测码。
    返回：key键的状态。
    共有四个值0, 1, 2, -1。0表示持续松开的状态、1表示刚按下的状态、2表示长按的状态、-1表示刚松开的状态。

    keyboard:Update()
    返回：nil
    用于更新按键函数。

    示例：
    -- scene.lua --
    function SCENE.update(dt)
        if (keyboard:GetState("a") == 1) then
            print(true)
        end
    end

    该段代码将在A键刚按下的时候打印一次true。




    scenes:Init(string "name")
    第一个参数：场景的名称（固定从路径"Scripts/Scenes/"中取）
    返回：nil
    用于初始化一个场景，通常已经在main.lua中被写好。

    scenes:Goto(string "name")
    第一个参数：要去的场景的名称（固定从路径"Scripts/Scenes/"中取）
    返回：nil
    用于跳转场景，也就是所说的“切换房间”。



对main.lua的一些小介绍：

    main.lua中的变量，只要不带local，在scenes库的加持下，全部都可以被取用到。